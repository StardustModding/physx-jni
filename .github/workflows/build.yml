# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on:
  push:
    branches:
      - "*"
    tags:
      - '!**'
  pull_request:
    branches:
      - "*"
    tags:
      - '!**'

jobs:
  build_linux:
    name: Linux native binaries
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - uses: lukka/get-cmake@latest
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build native lib
      run: ./gradlew buildNativeProject
    - name: Build and test JNI bindings
      run: ./gradlew build

    - name: Upload Linux native lib artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-native-libs
        path: |
          */src/main/resources/de/fabmax/physxjni/linux/*.so
          */src/main/resources/de/fabmax/physxjni/linux/*.so.sha1

  build_windows:
    name: Windows native binaries
    runs-on: windows-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build native lib
        run: ./gradlew buildNativeProject
      - name: Build and test JNI bindings
        run: ./gradlew build

      - name: Upload Windows native lib artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-native-libs
          path: |
            */src/main/resources/de/fabmax/physxjni/windows/*.dll
            */src/main/resources/de/fabmax/physxjni/windows/*.dll.sha1

  build_macos:
    name: MacOS native binaries
    runs-on: macos-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install coreutils
        run: brew install coreutils
      - name: Setup CMake
        uses: lukka/get-cmake@latest
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build native lib
        run: ./gradlew buildNativeProject
        env:
          PM_PYTHON_EXT: python3

      - name: Build and test JNI bindings
        run: ./gradlew build
        with:
          name: macos-native-libs
          path: |
            */src/main/resources/de/fabmax/physxjni/macos/*.dylib
            */src/main/resources/de/fabmax/physxjni/macos/*.dylib.sha1
            */src/main/resources/de/fabmax/physxjni/macosarm/*.dylib
            */src/main/resources/de/fabmax/physxjni/macosarm/*.dylib.sha1
